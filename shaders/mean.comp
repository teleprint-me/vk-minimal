/** 
 * @file shaders/mean.comp
 */

#version 460
#extension GL_EXT_shader_atomic_float : enable

layout(local_size_x = 64) in;

layout(set = 0, binding = 0) readonly buffer InputBuffer {
    float data[];
};

layout(set = 0, binding = 1) writeonly buffer OutputBuffer {
    float result;
};

shared float partialSum[64];

void main() {
    uint idx = gl_GlobalInvocationID.x;
    partialSum[gl_LocalInvocationID.x] = data[idx];

    barrier();

    // Reduction: sum in one thread
    if (gl_LocalInvocationID.x == 0) {
        float sum = 0.0;
        for (int i = 0; i < 64; ++i) {
            sum += partialSum[i];
        }
        atomicAdd(result, sum);
    }
}
